{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# PyUnitWizard in your library\n",
    "*-Instructions to work with PyUnitWizard inside your own library-*\n",
    "\n",
    "Here you can find the instructions to include PyUnitWizard in your projects. Following this indications, you don't need to worry about the requirements of the libraries supported by PyUnitWizard.\n",
    "\n",
    "To illustrate how to include PyUnitWizard let's see a very simple library you can find in [github repository (examples directory)](https://github.com/uibcdf/PyUnitWizard/tree/main/examples): `testlib`. This is its structure:"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "```bash\n",
    "tree --dirsfirst --charset=markdown testlib\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "```\n",
    "testlib\n",
    "|-- box\n",
    "|   |-- __init__.py\n",
    "|   |-- methods_a.py\n",
    "|   |-- methods_b.py\n",
    "|   `-- methods_c.py\n",
    "|-- _pyunitwizard\n",
    "|   `-- __init__.py\n",
    "|-- __init__.py\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Make a directory named `_pyunitwizard` in your project top directory. And include in `_pyunitwizard` a `__init__.py` file such as:"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "```python\n",
    "### testlib/_pyunitwizard/__init__.py ###\n",
    "import pyunitwizard as puw\n",
    "\n",
    "# In this case Pint and openmm.unit are loaded\n",
    "# and openmm.unit is defined as default form\n",
    "puw.set_default_form('openmm.unit')\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now, let's define some methods using your `_pyunitwizard` module. The first ones in the file `main.py`:"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "```python\n",
    "### testlib/main.py ###\n",
    "from ._pyunitwizard import puw\n",
    "\n",
    "def sum_quantities(a, b, form=None):\n",
    "\n",
    "    aa = puw.string_to_quantity(a, to_form=form)\n",
    "    bb = puw.string_to_quantity(b, to_form=form)\n",
    "    output = aa+bb\n",
    "\n",
    "    return output\n",
    "\n",
    "def get_form(quantity):\n",
    "\n",
    "    return puw.get_form(quantity)\n",
    "\n",
    "def libraries_loaded():\n",
    "\n",
    "    return puw.libraries_loaded()\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "And in a directory named `box` let's include two methods to test your `_pyunitwizard` module:"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "```python\n",
    "### testlib/box/methods_a.py\n",
    "from .._pyunitwizard import puw\n",
    "\n",
    "def get_default_form():\n",
    "\n",
    "    return puw.get_default_form()\n",
    "```\n",
    "\n",
    "```python\n",
    "### testlib/box/methods_b.py\n",
    "from .._pyunitwizard import puw\n",
    "\n",
    "def set_default_form(form):\n",
    "\n",
    "    return puw.set_default_form(form)\n",
    "```\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Finnally, let's writte the `__init__.py` files in the top directory and in `box`:"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "```python\n",
    "# testlib/box/__init__.py\n",
    "from .methods_a import get_default_form\n",
    "from .methods_b import set_default_form\n",
    "```\n",
    "\n",
    "```python\n",
    "# testlib/__init__.py\n",
    "from .main import sum_quantities, get_form, libraries_loaded\n",
    "from . import box\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This way we already have a simple library using PyUnitWizard. You can check how `testlib` works:"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "```ipython\n",
    "In [1]: import testlib\n",
    "\n",
    "In [2]: testlib.libraries_loaded()\n",
    "Out[2]: ['pint', 'openmm.unit']\n",
    "\n",
    "In [3]: q = testlib.sum_quantities('2cm','3cm')\n",
    "\n",
    "In [4]: testlib.get_form(q)\n",
    "Out[4]: 'openmm.unit'\n",
    "\n",
    "In [5]: testlib.box.get_default_form()\n",
    "Out[5]: 'openmm.unit'\n",
    "\n",
    "In [6]: testlib.box.set_default_form('pint')\n",
    "\n",
    "In [7]: q = testlib.sum_quantities('2cm','3cm')\n",
    "\n",
    "In [8]: testlib.get_form(q)\n",
    "Out[8]: 'pint'\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-block alert-info\">\n",
    "<b>Tip:</b> Together with testlib, in the github repository, you can find testlib2\n",
    "where pyunitwizard is included using only absolut import paths -as suggested by <a href=\"https://www.python.org/dev/peps/pep-0008/#imports\">PEP8</a>-</div>"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
