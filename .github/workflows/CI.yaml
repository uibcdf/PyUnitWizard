name: CI

on:
  # GitHub has started calling new repo's first branch "main" https://github.com/github/renaming
  # Existing codes likely still have "master" as the primary branch
  # Both are tracked here to keep legacy and new codes working
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  schedule:
    # Nightly tests run on master by default:
    #   Scheduled workflows run on the latest commit on the default or base branch.
    #   (from https://help.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events-schedule)
    - cron: "0 9 * * MON"

  workflow_dispatch:

jobs:
  test:
    name: Test on ${{ matrix.cfg.os }}, Python ${{ matrix.cfg.python-version }}
    runs-on: ${{ matrix.cfg.os }}
    strategy:
      fail-fast: false  # do not cancel all in-progress jobs if any job variation fails
      matrix:
        cfg:
          - { os: ubuntu-latest, python-version: "3.10"}
          - { os: ubuntu-latest, python-version: "3.11"}
          - { os: ubuntu-latest, python-version: "3.12"}
          - { os: macos-latest,  python-version: "3.10"}
          - { os: macos-latest,  python-version: "3.11"}
          - { os: macos-latest,  python-version: "3.12"}

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Additional info about the build
      shell: bash
      run: |
        uname -a

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.cfg.python-version }}

    - name: Setup conda env
      uses: mamba-org/setup-micromamba@v1
      with:
        environment-file: devtools/conda-envs/test_env.yaml
        environment-name: test
        condarc: |
          channels:
            - uibcdf
            - conda-forge
            - defaults
          channel_priority: strict

        create-args: >-
          python=${{ matrix.cfg.python-version }}

    - name: Info conda
      shell: bash -l {0}
      run: |
        micromamba activate test
        micromamba info
        micromamba list

    - name: Install package

      # conda setup requires this special shell
      shell: bash -l {0}
      run: |
        python -m pip install . --no-deps

    - name: Test import module
      shell: bash -l {0}
      run: |
        echo "::group::Importing module from home directory"
        cd
        pwd
        echo 'import pyunitwizard; print("Version of the package: {}".format(pyunitwizard.__version__))' | python
        echo "::endgroup::"

    - name: Run tests

      # conda setup requires this special shell
      shell: bash -l {0}

      run: |
        export PYTHONPATH=$PYTHONPATH:$(pwd)
        pytest -n logical -v --cov-config=.coveragerc --cov=molsysmt --cov-report=xml --junitxml=junit.xml --color=yes

    - name: Check coverage
      shell: bash -l {0}
      run: |
        cat ./coverage.xml

    - name: Upload coverage reports to Codecov
      if: matrix.cfg.os == 'ubuntu-latest' && matrix.cfg.python-version == '3.12'
      uses: codecov/codecov-action@v4
      with:
        verbose: true
        file: ./coverage.xml
        flags: unittests
        name: codecov-${{ matrix.cfg.os }}-py${{ matrix.cfg.python-version }}
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Upload test results to Codecov
      if: matrix.cfg.os == 'ubuntu-latest' && matrix.cfg.python-version == '3.12' && ${{ !cancelled() }}
      uses: codecov/test-results-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

